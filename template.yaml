AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  LambdaWeatherApp

 SAM Template for LambdaWeatherApp
Globals:
  Function:
    Runtime: java11
    MemorySize: 512
    Timeout: 25
    Environment:
      Variables:
        LOCATIONS_TABLE: !Ref LocationsTable
    Tracing: Active

Resources:
  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      TracingEnabled: true
  LocationsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: locationName
        Type: String

  WeatherEventLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WeatherEventLambda
      Handler: weather.WeatherEventLambda::handleRequest
      CodeUri: target/lambda.zip
      Policies:
        - DynamoDBCrudPolicy:
           TableName: !Ref LocationsTable
      Events:
        ApiEvents:
          Type: Api
          Properties:
            RestApiId: !Ref APIGateway
            Path: /events
            Method: POST

  WeatherQueryLambda:
      Type: AWS::Serverless::Function
      Properties:
       FunctionName: WeatherQueryLambda
       Handler: weather.WeatherQueryLambda::handleRequest
       CodeUri: target/lambda.zip
       Policies:
         - DynamoDBReadPolicy:
            TableName: !Ref LocationsTable
       Events:
         ApiEvents:
           Type: Api
           Properties:
             RestApiId: !Ref APIGateway
             Path: /locations
             Method: GET
  WeatherEventLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${WeatherEventLambda}"

  OxfordWeatherMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: OxfordWeatherMetricFilter
      FilterPattern: '{$.message.locationName = "Oxford, UK"}'
      LogGroupName: !Ref WeatherEventLambdaLogGroup
      MetricTransformations:
        - MetricValue: "1"
          DefaultValue: 0
          MetricName: OxfordWeatherEventCount
          MetricNamespace: WeatherApp

  BrooklynWeatherMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: BrooklynWeatherMetricFilter
      FilterPattern: '{$.message.locationName = "Brooklyn, NY"}'
      LogGroupName: !Ref WeatherEventLambdaLogGroup
      MetricTransformations:
        - MetricValue: "1"
          DefaultValue: 0
          MetricName: BrooklynWeatherEventCount
          MetricNamespace: WeatherApp

  OxfordWeatherTopic:
    Type: AWS::SNS::Topic

  BrooklynWeatherAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      Namespace: WeatherApp
      AlarmName: BrooklynWeatherAlarm
      MetricName: BrooklynWeatherEventCount
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Period: 10
      EvaluationPeriods: 1
      TreatMissingData: breaching
      AlarmActions:
       - !Ref OxfordWeatherTopic

